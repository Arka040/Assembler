COMMENT ~

 СТУДЕНТ _________     группа _______
 САМОСТОЯТЕЛЬНАЯ РАБОТА 17 (в машинном классе)

 ЗАДАЧА_2 (максимально 20 очков)
 
 Описать логическую функцию Mod_64(X,N) CО СТАНДАРТНЫМИ СОГЛАШЕНИЯМИ О СВЯЗЯХ
 stdcall. Здесь X - массив из двойных слов (б/зн), N (>0) - его размерность, 
 заданная в формате двойного слова. Функция проверяет, все ли элементы этого
 массива кратны 64, и возвращает ответ в формате байта: 0FFh (True) или 0 (False)
 
 ВАЖНЫЕ ТРЕБОВАНИЯ: 
 1) В решении ЗАПРЕЩЕНО ИСПОЛЬЗОВАТЬ команды div, and и любые
 команды сдвигов (для проверки числа на кратность 64 следует воспользоваться 
 командой test с правильно подобранной “маской”). 
 2) Тело цикла не должно содержать более двух команд (включая команду цикла).
 ЗАМЕЧАНИЕ: 
 Нарушение требований (при правильной работе программы) приводит к снижению очков.
 
 Выписать ОБРАЩЕНИЕ К ЭТОЙ ФУНКЦИИ для массива Z размерности Len, описание 
 которого дано ниже в секции данных этой программы, а после  обращения - вывести 
 получившийся ответ (вывод нужно осуществлять из основной программы) в 16-ом виде:
 ffh или 0. 

~
include console.inc
.data
T   db " ФАМИЛИЯ______ ИМЯ______   Задача_2 (с-р 17)",0		
Z   dd 128,320,3555555520,790080,64,63209856   ; б/зн
;       ^   ^       ^        ^   ^       ^
;   (в предыдущей строке помечены символом ^ все элементы, кратные 64)
Len equ ($-Z)/4 ; поручили ассемблеру вычислить самостоятельно длину массива Z

.code
; function Mod_64(var X: array of longword; N: longword): byte
; AL := 0FF (если все элементы массива Х кратны 2^6) или 0 (иначе)
Mod_64 proc
; [EBP+8]  ~ написать что здесь лежит !!!
; [EBP+12] ~ написать что здесь лежит !!!

; пролог (стандартные входные действия):
    push EBP
    mov EBP, ESP
    push EBX
    push ECX
    push EDX
; решение задачи (кратко комментировать каждую строчку решения!):
    mov AL, 0
    mov ECX, [EBP+12]
    mov EBX, [EBP+8]
L:  test byte ptr [4*ECX+EBX-4], 3Fh
    loopZ L
    jNZ fin 
    mov AL, 0FFh
fin:    

; эпилог (стандартные выходные действия):
    pop EDX
    pop ECX
    pop EBX
    pop EBP
    ret 4*2

Mod_64 endp

Start:
    ConsoleTitle offset T	
; применение процедуры к массиву Z длины Len: Mod_64(Z,Len)
    push Len
    push offset Z
    call Mod_64
    
; печать ответа в 16-м виде:
    outnumln AL,,x               
    
;   pause						; нужно при сдаче по e-mail
    exit						
end Start

============================================================
для исходного массива должен быть напечатан ответ ffh 
остальные тесты задаёт проверяющий
============================================================

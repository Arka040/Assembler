Microsoft (R) Macro Assembler Version 6.14.8444		    05/12/23 18:03:41
u2.asm							     Page 1 - 1


				comment *
				------------------------------------------------------------------------
				ВЫХОД-5 (Задача_2, вспомогательный модуль) 
				------------------------------------------------------------------------
				*

				include console.inc
			      C .NOLIST
			      C .LIST
			      C ; Исключение из списка служебных слов
			      C option NoKeyWord: <c name str>
			      C 
			      C 
			      C 
			      C ;include masm32.inc
			      C 
			      C    includelib masm32.lib
			      C    includelib user32.lib
			      C    includelib kernel32.lib
			      C    includelib msvcrt.lib
			      C    includelib io_proc.lib
			      C    
			      C 

				public In_text, Out_text, Find_min_word 

 00000000			.code
				;-----------------------------------------------------------------------
				; procedure In_word(var Elem_of_Arr: array of byte; K: longword)
				;-----------------------------------------------------------------------
				; ДЕЙСТВИЕ: ввод K-буквенного слова, преобразование его к верхнему регистру
				; и сохранение этого слова по адресу, заданному параметром Elem_of_Array.
				; Перед окончанием работы процедура In_word  "чистит" буфер ввода 
				; (макрокомандой flush) от управляющих символов, попавших в буфер в 
				; результате нажатия клавиши ENTER (сделать это надо обязательно, иначе  
				; дальнейший ввод будет осуществляться некорректно !!!). 
				;-----------------------------------------------------------------------
 00000000			In_word proc        ; stdcall
				; [EBP+8]   ~  offset Elem_of_Arr
				; [EBP+12]  ~  K
 00000000  55			    push EBP
 00000001  8B EC		    mov EBP, ESP
 00000003  50			    push EAX
 00000004  53			    push EBX
 00000005  51			    push ECX
 00000006  52			    push EDX
				    
				    
 00000007  8B 45 08		    mov EAX, [EBP+8]
 0000000A  8B 5D 0C		    mov EBX, [EBP+12]
 0000000D  33 C9		    xor ECX, ECX
 0000000F  80 C9 5F		    or CL, 1011111b
 00000012			@L:    inchar DL
 00000033  22 D1		    and DL, CL
 00000035  88 10		    mov byte ptr [EAX], DL
 00000037  40			    inc EAX
 00000038  4B			    dec EBX
 00000039  75 D7		    jNZ @L
				    flush
				    
 00000058  5A			    pop EDX
 00000059  59			    pop ECX
 0000005A  5B			    pop EBX
 0000005B  58			    pop EAX
 0000005C  5D			    pop EBP
 0000005D  C2 0008		    ret 4*2

 00000060			In_word endp

				;-----------------------------------------------------------------------
				; procedure Out_word(var Elem_of_Arr: array of byte; K: longword)
				;-----------------------------------------------------------------------
				; ДЕЙСТВИЕ: вывод слова из К букв, адрес начала этого слова задан 
				; параметром Elem_of_Arr. 
				;-----------------------------------------------------------------------
 00000060			Out_word proc        ; stdcall
				; [EBP+8]   ~  offset Elem_of_Arr
				; [EBP+12]  ~  K
 00000060  55			    push EBP
 00000061  8B EC		    mov EBP, ESP
 00000063  50			    push EAX
 00000064  53			    push EBX
 00000065  51			    push ECX
				    
 00000066  8B 45 08		    mov EAX, [EBP+8]
 00000069  8B 5D 0C		    mov EBX, [EBP+12]
				    
 0000006C  8A 08		@L:    mov CL, byte ptr [EAX]
				    outchar CL
 000000D2  40			    inc EAX
 000000D3  4B			    dec EBX
 000000D4  75 96		    jNZ @L
				    
 000000D6  59			    pop ECX
 000000D7  5B			    pop EBX
 000000D8  58			    pop EAX
 000000D9  5D			    pop EBP
 000000DA  C2 0008		    ret 4*2

 000000DD			Out_word endp

				;-----------------------------------------------------------------------
				; procedure In_text(var Arr_of_words: array of byte; N,K: longword) 
				;-----------------------------------------------------------------------
				; ДЕЙСТВИЕ: ввод последовательности из N слов (по К букв в каждом слове), 
				; преобразование слов к верхн.регистру и сохранение их в массиве Arr_of_words.
				; В процессе работы процедура In_text обращается к вспомогательной процедуре
				; In_word для ввода очередного слова и сохранения его в очередном элементе 
				; массива Arr_of_words
				;-----------------------------------------------------------------------
 000000DD			In_text proc         ; stdcall
				; [EBP+8]   ~  offset Arr_of_words
				; [EBP+12]  ~  N
				; [EBP+16]  ~  K
 000000DD  55			    push EBP
 000000DE  8B EC		    mov EBP, ESP
 000000E0  50			    push EAX
 000000E1  53			    push EBX
 000000E2  51			    push ECX
				    
 000000E3  8B 45 08		    mov EAX, [EBP+8]
 000000E6  8B 5D 0C		    mov EBX, [EBP+12]
 000000E9  8B 4D 10		    mov ECX, [EBP+16]

 000000EC			@L1:    
 000000EC  51			    push ECX
 000000ED  50			    push EAX
 000000EE  E8 FFFFFF0D		    call In_word
 000000F3  03 C1		    add EAX, ECX
 000000F5  4B			    dec EBX
 000000F6  75 F4		    jNZ @L1
				    
 000000F8  59			    pop ECX
 000000F9  5B			    pop EBX
 000000FA  58			    pop EAX
 000000FB  5D			    pop EBP
 000000FC  C2 000C		    ret 4*3
 000000FF			In_text endp

				;-----------------------------------------------------------------------
				; procedure Out_text(var Arr_of_words: array of byte; N,K: longword) 
				;-----------------------------------------------------------------------
				; ДЕЙСТВИЕ: вывод N слов (по К букв в каждом слове), каждое слово – с новой 
				; строки экрана. Адрес начала массива из слов задаётся параметром Arr_of_words.
				; В процессе работы процедура Out_text обращается к вспомогательной процедуре
				; Out_word для вывода очередного слова
				;-----------------------------------------------------------------------
 000000FF			Out_text proc       ; stdcall
				; [EBP+8]   ~  offset Arr_of_words
				; [EBP+12]  ~  N
				; [EBP+16]  ~  K
 000000FF  55			    push EBP
 00000100  8B EC		    mov EBP, ESP
 00000102  50			    push EAX
 00000103  53			    push EBX
 00000104  51			    push ECX
				    
 00000105  8B 45 08		    mov EAX, [EBP+8]
 00000108  8B 5D 0C		    mov EBX, [EBP+12]
 0000010B  8B 4D 10		    mov ECX, [EBP+16]
				    
 0000010E  51			@L:    push ECX
 0000010F  50			    push EAX
 00000110  E8 FFFFFF4B		    call Out_word
 00000115  03 C1		    add EAX, ECX
				    newline
 00000183  4B			    dec EBX
 00000184  75 88		    jNZ @L
				    
 00000186  59			    pop ECX
 00000187  5B			    pop EBX
 00000188  58			    pop EAX
 00000189  5D			    pop EBP
 0000018A  C2 000C		    ret 4*3
 0000018D			Out_text endp	

				;-----------------------------------------------------------------------		
				; procedure Find_min_word(var Arr_of_words: array of byte; N,K: longword) 
				;-----------------------------------------------------------------------
				; ДЕЙСТВИЕ: поиск слова (в массиве Arr_of_words), которое лексикографически 
				; предшествует всем остальным словам и вывод найденного слова на экран.
				; Адрес начала массива из N слов (каждое слово длиной К букв) задаётся 
				; параметром Arr_of_words.
				; В процессе своей работы процедура Find_min_word обращается к вспомогательной
				; процедуре Out_word для вывода найденного слова.
				;-----------------------------------------------------------------------  
 0000018D			Find_min_word proc  ; stdcall
				; [EBP+8]   ~  offset Arr_of_words
				; [EBP+12]  ~  N
				; [EBP+16]  ~  K
 0000018D  55			    push EBP
 0000018E  8B EC		    mov EBP, ESP
 00000190  50			    push EAX
 00000191  53			    push EBX
 00000192  51			    push ECX
 00000193  52			    push EDX
 00000194  57			    push EDI
 00000195  56			    push ESI
				    
 00000196  8B 75 08		    mov ESI, [EBP+8]
 00000199  8B 5D 0C		    mov EBX, [EBP+12]
 0000019C  B8 00000000		    mov EAX, 0
 000001A1  83 EB 01		    sub EBX, 1
 000001A4  8B FE		    mov EDI, ESI
 000001A6  8B 4D 10		@L:     mov ECX, [EBP+16]
 000001A9  03 F9		    add EDI, ECX
 000001AB  40			    inc EAX
 000001AC  F3/ A6		repE cmpsB
 000001AE  75 02		    jNZ @s
 000001B0  EB 09		    jmp @next
 000001B2  8B 55 10		@s: mov EDX, [EBP+16]
 000001B5  2B D1		    sub EDX, ECX
 000001B7  2B FA		    sub EDI, EDX
				    
 000001B9  8B F7		    mov ESI, EDI
				    
 000001BB  3B C3		@next: cmp EAX, EBX
 000001BD  75 E7		    jNE @L
				    
 000001BF  8B 4D 10		    mov ECX, [EBP+16]
 000001C2  51			    push ECX
 000001C3  56			    push ESI
 000001C4  E8 FFFFFE97		    call Out_word
				    
 000001C9  5E			    pop ESI
 000001CA  5F			    pop EDI
 000001CB  5A			    pop EDX
 000001CC  59			    pop ECX
 000001CD  5B			    pop EBX
 000001CE  58			    pop EAX
 000001CF  5D			    pop EBP
 000001D0  C2 000C		    ret 4*3


 000001D3			Find_min_word endp			
				;-----------------------------------------------------------------------
					
				end
Microsoft (R) Macro Assembler Version 6.14.8444		    05/12/23 18:03:41
u2.asm							     Symbols 2 - 1




Macros:

                N a m e                 Type

??CheckStrToBuf  . . . . . . . .	Proc
??FindESP  . . . . . . . . . . .	Proc
??RestoreReg . . . . . . . . . .	Proc
??SaveReg  . . . . . . . . . . .	Proc
@GetCommandLine  . . . . . . . .	Func
@Random  . . . . . . . . . . . .	Func
@inchar  . . . . . . . . . . . .	Func
@inintln . . . . . . . . . . . .	Func
@inint . . . . . . . . . . . . .	Func
@readkey . . . . . . . . . . . .	Func
ChagePageAttr  . . . . . . . . .	Proc
ClrScr . . . . . . . . . . . . .	Proc
ConsoleMode  . . . . . . . . . .	Proc
ConsoleTitle . . . . . . . . . .	Proc
DOS  . . . . . . . . . . . . . .	Func
DownloadFile . . . . . . . . . .	Proc
GetConsoleTitle  . . . . . . . .	Proc
HeapBlockSize  . . . . . . . . .	Proc
InputStr . . . . . . . . . . . .	Proc
MsgBox . . . . . . . . . . . . .	Proc
NewConsole . . . . . . . . . . .	Proc
OpenFile . . . . . . . . . . . .	Proc
OutFlags . . . . . . . . . . . .	Proc
Randomize  . . . . . . . . . . .	Proc
RunExe . . . . . . . . . . . . .	Proc
SetScreenSize  . . . . . . . . .	Proc
SetTextAttr  . . . . . . . . . .	Proc
TotalHeapAllocated . . . . . . .	Proc
WhereX . . . . . . . . . . . . .	Proc
WhereY . . . . . . . . . . . . .	Proc
dispose  . . . . . . . . . . . .	Proc
exit . . . . . . . . . . . . . .	Proc
flush  . . . . . . . . . . . . .	Proc
gotoXY . . . . . . . . . . . . .	Proc
inchar . . . . . . . . . . . . .	Proc
inintln  . . . . . . . . . . . .	Proc
inint  . . . . . . . . . . . . .	Proc
newline  . . . . . . . . . . . .	Proc
new  . . . . . . . . . . . . . .	Proc
outcharln  . . . . . . . . . . .	Proc
outchar  . . . . . . . . . . . .	Proc
outdateln  . . . . . . . . . . .	Proc
outdate  . . . . . . . . . . . .	Proc
outintln . . . . . . . . . . . .	Proc
outint . . . . . . . . . . . . .	Proc
outnumln . . . . . . . . . . . .	Proc
outnum . . . . . . . . . . . . .	Proc
outstrln . . . . . . . . . . . .	Proc
outstr . . . . . . . . . . . . .	Proc
outtimeln  . . . . . . . . . . .	Proc
outtime  . . . . . . . . . . . .	Proc
outwordln  . . . . . . . . . . .	Proc
outword  . . . . . . . . . . . .	Proc
pause  . . . . . . . . . . . . .	Proc
readkey  . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  x  . . . . . . . . . . . . . .	 00000000	 Word
  y  . . . . . . . . . . . . . .	 00000002	 Word
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SystemTime . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word


Types:

                N a m e                  Size     Attr

c_msvcrt . . . . . . . . . . . .	 00000004     CODE 


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000283 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001D3 Para	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

CharToOemA . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ClearScreen  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Find_min_word  . . . . . . . . .	P Near	 0000018D _TEXT	Length= 00000046 Public STDCALL
  @L . . . . . . . . . . . . . .	L Near	 000001A6 _TEXT	
  @s . . . . . . . . . . . . . .	L Near	 000001B2 _TEXT	
  @next  . . . . . . . . . . . .	L Near	 000001BB _TEXT	
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetModuleHandleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemMetrics . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalAlloc  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalFree . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GlobalSize . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
In_text  . . . . . . . . . . . .	P Near	 000000DD _TEXT	Length= 00000022 Public STDCALL
  @L1  . . . . . . . . . . . . .	L Near	 000000EC _TEXT	
In_word  . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000060 Public STDCALL
  @L . . . . . . . . . . . . . .	L Near	 00000012 _TEXT	
  ??0002 . . . . . . . . . . . .	L Near	 0000001D _TEXT	
  ??0004 . . . . . . . . . . . .	L Near	 0000003F _TEXT	
InternetGetConnectedState  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxIndirectA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Out_text . . . . . . . . . . . .	P Near	 000000FF _TEXT	Length= 0000008E Public STDCALL
  @L . . . . . . . . . . . . . .	L Near	 0000010E _TEXT	
  ??0016 . . . . . . . . . . . .	L Near	 00000136 _TEXT	
  ??0017 . . . . . . . . . . . .	L Near	 0000016C _TEXT	
Out_word . . . . . . . . . . . .	P Near	 00000060 _TEXT	Length= 0000007D Public STDCALL
  @L . . . . . . . . . . . . . .	L Near	 0000006C _TEXT	
  ??000C . . . . . . . . . . . .	L Near	 00000089 _TEXT	
  ??000D . . . . . . . . . . . .	L Near	 000000BF _TEXT	
SetConsoleCtrlHandler  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdIn  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StdOut . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
URLDownloadToFileA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
VirtualProtect . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nrandom  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
nseed  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell_ex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
shell  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
wait_key . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Number	 00000001h   
??0001 . . . . . . . . . . . . .	Byte	 00000019 _DATA	
??0003 . . . . . . . . . . . . .	Byte	 0000001B _DATA	
??0005 . . . . . . . . . . . . .	Number	 00000001h   
??0006 . . . . . . . . . . . . .	Byte	 0000001C _DATA	
??0008 . . . . . . . . . . . . .	Byte	 0000014B _DATA	
??0009 . . . . . . . . . . . . .	Byte	 0000001F _DATA	
??000A . . . . . . . . . . . . .	Text   	 o
??000B . . . . . . . . . . . . .	Byte	 0000001E _DATA	
??000E . . . . . . . . . . . . .	Byte	 0000014E _DATA	
??000F . . . . . . . . . . . . .	Number	 00000000h   
??0010 . . . . . . . . . . . . .	Byte	 00000151 _DATA	
??0012 . . . . . . . . . . . . .	Byte	 00000280 _DATA	
??0013 . . . . . . . . . . . . .	Byte	 00000154 _DATA	
??0014 . . . . . . . . . . . . .	Text   	 o
??0015 . . . . . . . . . . . . .	Byte	 00000153 _DATA	
??CommonHeapElemSize . . . . . .	DWord	 00000004 _DATA	
??ConsoleMode  . . . . . . . . .	Byte	 00000008 _DATA	
??TotalHeapAllocated . . . . . .	DWord	 00000000 _DATA	
??sTime  . . . . . . . . . . . .	SystemTime  00000009 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DOS . . . . . . . . . . . . . .	Text   	 DOS
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@INCHAR  . . . . . . . . . . . .	Text   	 @inchar
@ININTLN . . . . . . . . . . . .	Text   	 @inintln
@ININT . . . . . . . . . . . . .	Text   	 @inint
@InChar  . . . . . . . . . . . .	Text   	 @inchar
@InInt . . . . . . . . . . . . .	Text   	 @inint
@Inchar  . . . . . . . . . . . .	Text   	 @inchar
@InintLn . . . . . . . . . . . .	Text   	 @inintln
@Inintln . . . . . . . . . . . .	Text   	 @inintln
@Inint . . . . . . . . . . . . .	Text   	 @inint
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@READKEY . . . . . . . . . . . .	Text   	 @readkey
@ReadKey . . . . . . . . . . . .	Text   	 @readkey
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@dos . . . . . . . . . . . . . .	Text   	 DOS
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@random  . . . . . . . . . . . .	Text   	 @Random
@stack . . . . . . . . . . . . .	Text   	 FLAT
AllocConsole@0 . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
Black  . . . . . . . . . . . . .	Number	 00000000h   
Blue . . . . . . . . . . . . . .	Number	 00000001h   
Bright . . . . . . . . . . . . .	Number	 00000008h   
Brown  . . . . . . . . . . . . .	Number	 00000006h   
CLRSCR . . . . . . . . . . . . .	Text   	 ClrScr
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CharToOem  . . . . . . . . . . .	Text   	 CharToOemA
Cls  . . . . . . . . . . . . . .	Text   	 ClrScr
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
Cyan . . . . . . . . . . . . . .	Number	 00000003h   
DISPOSE  . . . . . . . . . . . .	Text   	 dispose
DarkGray . . . . . . . . . . . .	Number	 00000008h   
Dispose  . . . . . . . . . . . .	Text   	 dispose
EXIT . . . . . . . . . . . . . .	Text   	 exit
Exit . . . . . . . . . . . . . .	Text   	 exit
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FLUSH  . . . . . . . . . . . . .	Text   	 flush
Flush  . . . . . . . . . . . . .	Text   	 flush
FreeConsole@0  . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GMEM_FIXED . . . . . . . . . . .	Number	 00000000h   
GMEM_ZEROINIT  . . . . . . . . .	Number	 00000040h   
GOTOXY . . . . . . . . . . . . .	Text   	 gotoXY
GetModuleHandle  . . . . . . . .	Text   	 GetModuleHandleA
GotoXY . . . . . . . . . . . . .	Text   	 gotoXY
Green  . . . . . . . . . . . . .	Number	 00000002h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INCHAR . . . . . . . . . . . . .	Text   	 inchar
ININTLN  . . . . . . . . . . . .	Text   	 inintln
ININT  . . . . . . . . . . . . .	Text   	 inint
INPUTSTR . . . . . . . . . . . .	Text   	 InputStr
InChar . . . . . . . . . . . . .	Text   	 inchar
InInt  . . . . . . . . . . . . .	Text   	 inint
Inchar . . . . . . . . . . . . .	Text   	 inchar
InintLn  . . . . . . . . . . . .	Text   	 inintln
Inintln  . . . . . . . . . . . .	Text   	 inintln
Inint  . . . . . . . . . . . . .	Text   	 inint
LANG_NEUTRAL . . . . . . . . . .	Number	 00000000h   
LightBlue  . . . . . . . . . . .	Number	 00000009h   
LightGray  . . . . . . . . . . .	Number	 00000007h   
LightGreen . . . . . . . . . . .	Number	 0000000Ah   
LightMagenta . . . . . . . . . .	Number	 0000000Dh   
LightRed . . . . . . . . . . . .	Number	 0000000Ch   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000008h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_RIGHT . . . . . . . . . . . .	Number	 00080000h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MSGBOX . . . . . . . . . . . . .	Text   	 MsgBox
Magenta  . . . . . . . . . . . .	Number	 00000005h   
MessageBoxIndirect . . . . . . .	Text   	 MessageBoxIndirectA
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NEWLINE  . . . . . . . . . . . .	Text   	 newline
NEW  . . . . . . . . . . . . . .	Text   	 new
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NewLine  . . . . . . . . . . . .	Text   	 newline
Newline  . . . . . . . . . . . .	Text   	 newline
New  . . . . . . . . . . . . . .	Text   	 new
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
OUTCHARLN  . . . . . . . . . . .	Text   	 outcharln
OUTCHAR  . . . . . . . . . . . .	Text   	 outchar
OUTCH  . . . . . . . . . . . . .	Text   	 outchar
OUTCLN . . . . . . . . . . . . .	Text   	 outcharln
OUTDATELN  . . . . . . . . . . .	Text   	 outdateln
OUTDATE  . . . . . . . . . . . .	Text   	 outdate
OUTINTLN . . . . . . . . . . . .	Text   	 outintln
OUTINT . . . . . . . . . . . . .	Text   	 outint
OUTI . . . . . . . . . . . . . .	Text   	 outint
OUTSTRLN . . . . . . . . . . . .	Text   	 outstrln
OUTSTR . . . . . . . . . . . . .	Text   	 outstr
OUTTIMELN  . . . . . . . . . . .	Text   	 outtimeln
OUTTIME  . . . . . . . . . . . .	Text   	 outtime
OUTU . . . . . . . . . . . . . .	Text   	 outword
OUTWORDLN  . . . . . . . . . . .	Text   	 outwordln
OUTWORD  . . . . . . . . . . . .	Text   	 outword
OutCharLn  . . . . . . . . . . .	Text   	 outcharln
OutCharln  . . . . . . . . . . .	Text   	 outcharln
OutChar  . . . . . . . . . . . .	Text   	 outchar
OutDateLn  . . . . . . . . . . .	Text   	 outdateln
OutDateln  . . . . . . . . . . .	Text   	 outdateln
OutDate  . . . . . . . . . . . .	Text   	 outdate
OutILn . . . . . . . . . . . . .	Text   	 outintln
OutIln . . . . . . . . . . . . .	Text   	 outintln
OutIntLn . . . . . . . . . . . .	Text   	 outintln
OutInt . . . . . . . . . . . . .	Text   	 outint
OutI . . . . . . . . . . . . . .	Text   	 outint
OutNumLn . . . . . . . . . . . .	Text   	 outnumln
OutNumln . . . . . . . . . . . .	Text   	 outnumln
OutNum . . . . . . . . . . . . .	Text   	 outnum
OutStrLn . . . . . . . . . . . .	Text   	 outstrln
OutStr . . . . . . . . . . . . .	Text   	 outstr
OutTimeLn  . . . . . . . . . . .	Text   	 outtimeln
OutTimeln  . . . . . . . . . . .	Text   	 outtimeln
OutTime  . . . . . . . . . . . .	Text   	 outtime
OutULn . . . . . . . . . . . . .	Text   	 outwordln
OutUln . . . . . . . . . . . . .	Text   	 outwordln
OutUnsignedLn  . . . . . . . . .	Text   	 outwordln
OutUnsignedln  . . . . . . . . .	Text   	 outwordln
OutUnsigned  . . . . . . . . . .	Text   	 outword
OutU . . . . . . . . . . . . . .	Text   	 outword
OutWordLn  . . . . . . . . . . .	Text   	 outwordln
OutWord  . . . . . . . . . . . .	Text   	 outword
OutintLn . . . . . . . . . . . .	Text   	 outintln
Outintln . . . . . . . . . . . .	Text   	 outintln
Outint . . . . . . . . . . . . .	Text   	 outint
OutstrLn . . . . . . . . . . . .	Text   	 outstrln
OutwordLn  . . . . . . . . . . .	Text   	 outwordln
Outword  . . . . . . . . . . . .	Text   	 outword
PAGE_EXECUTE_READWRITE . . . . .	Number	 00000040h   
PAGE_EXECUTE_READ  . . . . . . .	Number	 00000020h   
PAGE_EXECUTE_WRITECOPY . . . . .	Number	 00000080h   
PAGE_EXECUTE . . . . . . . . . .	Number	 00000010h   
PAGE_NOACCESS  . . . . . . . . .	Number	 00000001h   
PAGE_READONLY  . . . . . . . . .	Number	 00000002h   
PAGE_READWRITE . . . . . . . . .	Number	 00000004h   
PAGE_WRITECOPY . . . . . . . . .	Number	 00000008h   
PAUSE  . . . . . . . . . . . . .	Text   	 pause
Pause  . . . . . . . . . . . . .	Text   	 pause
READKEY  . . . . . . . . . . . .	Text   	 readkey
ReadKey  . . . . . . . . . . . .	Text   	 readkey
Red  . . . . . . . . . . . . . .	Number	 00000004h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
URLDownloadToFile  . . . . . . .	Text   	 URLDownloadToFileA
White  . . . . . . . . . . . . .	Number	 0000000Fh   
Yellow . . . . . . . . . . . . .	Number	 0000000Eh   
_imp___exit  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__printf . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
_imp__sprintf  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
bright . . . . . . . . . . . . .	Number	 00000008h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
clrscr . . . . . . . . . . . . .	Text   	 ClrScr
crt__exit  . . . . . . . . . . .	Text   	 _imp___exit
crt_printf . . . . . . . . . . .	Text   	 _imp__printf
crt_sprintf  . . . . . . . . . .	Text   	 _imp__sprintf
cyan . . . . . . . . . . . . . .	Number	 00000003h   
darkgray . . . . . . . . . . . .	Number	 00000008h   
dos  . . . . . . . . . . . . . .	Text   	 DOS
downloadfile . . . . . . . . . .	Text   	 DownloadFile
gotoxy . . . . . . . . . . . . .	Text   	 gotoXY
green  . . . . . . . . . . . . .	Number	 00000002h   
heapblocksize  . . . . . . . . .	Text   	 HeapBlockSize
inint_proc@0 . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
inputstr . . . . . . . . . . . .	Text   	 InputStr
lightblue  . . . . . . . . . . .	Number	 00000009h   
lightgray  . . . . . . . . . . .	Number	 00000007h   
lightgreen . . . . . . . . . . .	Number	 0000000Ah   
lightmagenta . . . . . . . . . .	Number	 0000000Dh   
lightred . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
msgbox . . . . . . . . . . . . .	Text   	 MsgBox
nil  . . . . . . . . . . . . . .	DWord 	 00000000h   
outch  . . . . . . . . . . . . .	Text   	 outchar
outintLn . . . . . . . . . . . .	Text   	 outintln
outi . . . . . . . . . . . . . .	Text   	 outint
outu . . . . . . . . . . . . . .	Text   	 outword
outwordLn  . . . . . . . . . . .	Text   	 outwordln
randomize  . . . . . . . . . . .	Text   	 Randomize
red  . . . . . . . . . . . . . .	Number	 00000004h   
settextattr  . . . . . . . . . .	Text   	 SetTextAttr
whereX . . . . . . . . . . . . .	Text   	 WhereX
whereY . . . . . . . . . . . . .	Text   	 WhereY
wherex . . . . . . . . . . . . .	Text   	 WhereX
wherey . . . . . . . . . . . . .	Text   	 WhereY
white  . . . . . . . . . . . . .	Number	 0000000Fh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors

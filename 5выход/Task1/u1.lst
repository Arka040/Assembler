Microsoft (R) Macro Assembler Version 6.14.8444		    05/12/23 01:39:46
u1.asm							     Page 1 - 1


				comment ~

				ВЫХОД-5 (Задача_1, вспомогательный модуль)

				Написать программу из двух модулей. 

				В головном модуле описать двойное слово  X (содержимое которого
				трактуется как число без знака) и байт Res (содержимое которого
				трактуется как число со знаком).  

				Во вспомогательном  модуле описать  общедоступную процедуру 
				Power2(X,Res) со стандартными соглашениями о связях  (stdcall).
				Параметр  X передаётся в процедуру по значению, Res – по ссылке.
				Процедура Power2 выполняет проверку 32-битной беззнаковой величины Х:
				является ли она степенью двойки, т.е. существует ли такое  k: 
				от 0 до 31, что X=2^k. Если да, то процедура записывает в байт Res
				показатель k найденной степени двойки, иначе – записывает в байт Res
				 -1 (минус!). В процессе своей работы процедура не использует команды
				умножения и деления. 

				Головной модуль вводит значение переменной Х,  после чего обращается
				к внешней процедуре Power2(X,Res)  для проверки числа X.  Затем 
				головной модуль выводит в окно консоли полученный в Res ответ. 
				На этом работа двухмодульной программы 
				завершается.

				Подсказка: в двоичном представлении степень двойки выглядит как 
				000…010…00, начальная или конечная последовательность нулей может
				отсутствовать.  При проверке числа Х рекомендуется использовать 
				маску вида 000…010…00 с подвижной единицей (передвигающейся от 
				одного края маски до другого), а также команду xor для сравнения
				битового представления числа Х  с данной маской (командами cmp и 
				sub для сравнения с маской - не пользоваться!).  

				Тесты:   
				1  -> 0,       2  -> 1,      5  -> -1,      256  -> 8,     65536  -> 16,      
				65535  > -1,    1048576  > 20,   2147483648   > 31,     4000000000  > -1   

				~

				;---------------------------------------------------------------------
				;            ВСПОМОГАТЕЛЬНЫЙ МОДУЛЬ (далее ваше решение:)
				;---------------------------------------------------------------------
				.686
				.model flat,stdcall

 00000000			.data

 00000000			.code
 00000000			Power2 proc public
 00000000  55			    push EBP
 00000001  8B EC		    mov EBP, ESP
 00000003  50			    push EAX
 00000004  53			    push EBX
 00000005  51			    push ECX
 00000006  52			    push EDX
				    
 00000007  8B 5D 0C		    mov EBX, [EBP+12]
 0000000A  33 C9		    xor ECX, ECX
 0000000C  41			    inc ECX
 0000000D  BA 00000000		    mov EDX, 0
 00000012  8B 45 08		@L:    mov EAX, [EBP+8]
 00000015  33 C1		    xor EAX, ECX
 00000017  74 11		    jZ @yes
 00000019  D1 E1		    shl ECX, 1
 0000001B  42			    inc EDX
 0000001C  83 FA 20		    cmp EDX, 32
 0000001F  75 F1		    jNE @L
 00000021  BA FFFFFFFF		    mov EDX, -1
 00000026  88 13		    mov [EBX], DL
 00000028  EB 02		    jmp @e
 0000002A  88 13		@yes: mov [EBX], DL
 0000002C			@e:    
 0000002C  5A			    pop EDX
 0000002D  59			    pop ECX
 0000002E  5B			    pop EBX
 0000002F  58			    pop EAX
 00000030  5D			    pop EBP
 00000031  C2 0008		    ret 4*2
				    
				    
 00000034			Power2 endp

				;---------------------(конец вашего решения)--------------------------
				end

Microsoft (R) Macro Assembler Version 6.14.8444		    05/12/23 01:39:46
u1.asm							     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
_DATA  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000034 Para	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

Power2 . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000034 Public STDCALL
  @L . . . . . . . . . . . . . .	L Near	 00000012 _TEXT	
  @yes . . . . . . . . . . . . .	L Near	 0000002A _TEXT	
  @e . . . . . . . . . . . . . .	L Near	 0000002C _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT

	   0 Warnings
	   0 Errors

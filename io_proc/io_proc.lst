Microsoft (R) Macro Assembler Version 6.14.8444		    03/01/18 20:52:05
io_proc.asm						     Page 1 - 1


				include console.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C ;include masm32.inc
			      C 
			      C    includelib masm32.lib
			      C    includelib user32.lib
			      C    includelib kernel32.lib
			      C    includelib msvcrt.lib
			      C    includelib io_proc.lib
			      C    
			      C 

 00000019			.data
 00000019 00 00 00		buf db 0,0,0
 0000001C 0000000A		_10 dd 10

 00000000			.code
				     public inint_proc
				;---------------------------------------------
 00000000			inint_proc proc
				; Схема Горнера
 00000000  53			     push  ebx
 00000001  51			     push  ecx
 00000002  52			     push  edx
 00000003  C6 05 0000001A R	     mov   buf+1,0;   ещё не было символов числа
	   00
 0000000A  C6 05 0000001B R	     mov   buf+2,0;   хороший конец лексемы (spaces,CR,LF)
	   00
 00000011  33 DB		     xor   ebx,ebx;   здесь формируем x
 00000013			LL:  invoke StdIn,offset buf,1; один символ
 0000001F  80 3D 00000019 R	     cmp   buf,' '
	   20
 00000026  75 0E		     jne   L1
 00000028  80 3D 0000001A R	     cmp   buf+1,0
	   00
 0000002F  74 E2		     je    LL;        ещё не было символов числа
 00000031  E9 000000C5		     jmp   KOH;       пробел - конец лексемы
 00000036  80 3D 00000019 R	L1:  cmp   buf,13;    CR
	   0D
 0000003D  75 0E		     jne   L11
 0000003F  80 3D 0000001A R	     cmp   buf+1,0
	   00
 00000046  74 CB		     je    LL;        CR, но ещё не было символов числа
 00000048  E9 000000AE		     jmp   KOH;       CR - конец числа
 0000004D  80 3D 00000019 R	L11: cmp   buf,10;    LF
	   0A
 00000054  75 0E		     jne   L2
 00000056  80 3D 0000001A R	     cmp   buf+1,0
	   00
 0000005D  74 B4		     je    LL;        LF, но ещё не было символов числа
 0000005F  E9 00000097		     jmp   KOH;       LF - конец строки и числа (так не бывает!)
 00000064  80 3D 00000019 R	L2:  cmp   buf,'-'
	   2D
 0000006B  75 12		     jne   L3
 0000006D  80 3D 0000001A R	     cmp   buf+1,0
	   00
 00000074  75 7E		     jne   KOH1;      минус внутри числа - плохой конец лексемы
 00000076  C6 05 0000001A R	     mov   buf+1,'-'; минус перед числом
	   2D
 0000007D  EB 94		     jmp   LL
 0000007F  80 3D 00000019 R	L3:  cmp   buf,'+' 
	   2B
 00000086  75 15		     jne   L4
 00000088  80 3D 0000001A R	     cmp   buf+1,0
	   00
 0000008F  75 63		     jne   KOH1;      плюс внутри числа - плохой конец лексемы
 00000091  C6 05 0000001A R	     mov   buf+1,'+'; плюс перед числом
	   2B
 00000098  E9 FFFFFF76		     jmp   LL
 0000009D  80 3D 00000019 R	L4:  cmp   buf,'0'
	   30
 000000A4  72 4E		     jb    KOH1;      не цифра - плохой конец лексемы
 000000A6  80 3D 00000019 R	     cmp   buf,'9'
	   39
 000000AD  77 45		     ja    KOH1;      не цифра - плохой конец лексемы
 000000AF  80 3D 0000001A R	     cmp   buf+1,0
	   00
 000000B6  75 07		     jne   L5
 000000B8  C6 05 0000001A R	     mov   buf+1,'+'; первая цифра числа, минуса не было
	   2B
				;    цифра
 000000BF  8B C3		L5:  mov   eax,ebx
 000000C1  F7 25 0000001C R	     mul   _10
 000000C7  72 5E		     jc    Error
 000000C9  8B D8		     mov   ebx,eax;   x:=10*x 
 000000CB  0F B6 05		     movzx eax,buf
	   00000019 R
 000000D2  83 E8 30		     sub   eax,'0'
 000000D5  03 D8		     add   ebx,eax;   x:=x*10+digit
 000000D7  72 4E		     jc    Error
 000000D9  80 3D 0000001A R	     cmp   buf+1,'-'; был минус перед числом
	   2D
 000000E0  0F 85 FFFFFF2D	     jne   LL;        не было минуса перед числом
 000000E6  81 FB 80000000	     cmp   ebx,80000000h;  
 000000EC  0F 86 FFFFFF21	     jbe   LL
				;    плохое число со знаком минус
 000000F2  EB 33		     jmp   Error
 000000F4  C6 05 0000001B R	KOH1:mov   buf+2,1;   плохой конец лексемы числа     
	   01
 000000FB  8B C3		KOH: mov   eax,ebx
 000000FD  80 3D 0000001A R	     cmp   buf+1,'-'
	   2D
 00000104  75 02		     jne   L6
 00000106  F7 D8		     neg   eax
 00000108  80 3D 0000001A R	L6:  cmp   buf+1,'-'; ZF:=1 => есть "-", иначе ZF:=0
	   2D
 0000010F  F8			     clc            ; CF:=0 - число в диапазоне dword
 00000110  9C			     pushfd
 00000111  80 24 24 7F		     and   byte ptr [esp],7Fh; SF:=0
 00000115  80 3D 0000001B R	     cmp   buf+2,0;   хорошая лексема ?  
	   00
 0000011C  74 04		     je    L7
 0000011E  80 0C 24 80		     or    byte ptr [esp],80h; SF:=1
 00000122  9D			L7:  popfd;         есть флаги CF=0, ZF и SF
 00000123  5A			L8:  pop   edx
 00000124  59			     pop   ecx
 00000125  5B			     pop   ebx
 00000126  C3			     ret
 00000127			Error:
				     SetTextAttr Yellow
				     outstrln "** inint: Number too big:=MaxLongint, CF:=1 **"
				     SetTextAttr
 00000236  B8 7FFFFFFF		     mov   eax,7FFFFFFFh; MaxLongint
 0000023B  50			     push  eax
				     flush
 00000257  58			     pop   eax
 00000258  F9			     stc;           CF:=1 - ошибка, ZF и SF не определены
 00000259  E9 FFFFFEC5		     jmp  L8
 0000025E			inint_proc endp
				;---------------------------------

				     end

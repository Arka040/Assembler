COMMENT *

 ЗАДАЧА_3 (25 очков)
 
 Пусть на языке Free Pascal даны следующие описания:
 const N = 10;
 type vector = array [1..N] of longint;
 
 Описать процедуру Sum(X,N) со стандартными соглашениями о связях stdcall
 при следующих условиях:
 X - массив типа vector, N - размерность этого массива 
 Процедура преобразует массив Х по следующему правилу: 
 for i := 1 to N-1 do X[i] := X[i] + X[N] + i
 (выход из диапазона longint не контролировать)

 Выписать обращение к этой процедуре для массива Y, описание которого
 дано в секции данных этой программы, а ПОСЛЕ  обращения к процедуре
 - вывести массив Y после изменений (вывод можно осуществить напрямую, 
 не описывая для этого специальной процедуры, т.к. вывод здесь нужен
 только для контроля правильности работы процедуры Sum).

*
include console.inc
.data
T   db " ФАМИЛИЯ______ ИМЯ______   Задача_3 (выход-3)",0		
N   = 10
; i:   1  2   3    4     5       6       7          8         9      10 
Y   dd 1,-20,300,-4000,50000,-6000000,70000000,-800000000,2000000000,-1 ; с/зн
; для этого массива должен получиться такой ОТВЕТ (сдавать на этом тесте!):
;      1 -19 302 -3997 50004 -5999995 70000006 -799999993 2000000008 -1

.code
; procedure Sum(var X: vector; N: longword)
; соглашения о связях stdcall
;   [EBP+8]  ~ offset X
;   [EBP+12] ~ N
; ДЕЙСТВИЕ: for i:= 1 to N-1 do X[i]:= X[i]+X[N]+i
Sum proc
; ----------------------------------------------------------------------------
; здесь ВАШЕ описание тела этой процедуры
    push EBP
    mov EBP, ESP
    push EAX
    push EBX
    push ECX
    push EDX
    
    mov EDX, [EBP+12]
    mov EAX, [EBP+8]
    
    mov ECX, 1
@L: 
    mov EBX, [EAX+4*EDX-4]
    add EBX, ECX
    add [EAX+4*ECX-4], EBX
    outi EBX,0,' '
    newline
    inc ECX
    cmp ECX, EDX
    jNE @L

    pop EDX
    pop ECX
    pop EBX
    pop EAX
    pop EBP
    
    ret 4*2
; ----------------------------------------------------------------------------
Sum endp

Start:
    ConsoleTitle offset T	
; ----------------------------------------------------------------------------
;  здесь вызов ВАШЕЙ процедуры Sum(Y,N):
    push N
    push offset Y
    call Sum

; ----------------------------------------------------------------------------    
; проверка результата работы ВАШЕЙ процедуры:
    mov EAX, 0
    mov EBX, offset Y
L: 
    outi [EBX+EAX],0,' '
    add EAX, 4
    cmp EAX, 4*N
    jNE L
    
    ;pause						; нужно при сдаче по e-mail
    exit						
end Start

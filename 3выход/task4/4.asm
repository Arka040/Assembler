COMMENT *

 ЗАДАЧА_4 (25 очков)
 
 Описать  рекурсивную функцию Replace_4_to_3(X) (здесь Х – двойное слово б/зн).
 Функция возвращает новое число, полученное из исходного числа Х путём замены 
 всех вхождений цифры 4 на цифру 3 в десятичной записи числа X.
 Например: 12345-->12335, 44444444-->33333333, 4000000004-->3000000003, 4-->3
 Функция должна выполнять стандартные соглашения о связях stdcall.
  
 Вывести результат последовательного применения функции Replace_4_to_3(X) ко
 всем элементам массива А, описанного в секции данных (сами элементы не менять)

*
include console.inc
.data
T   db " ФАМИЛИЯ______ ИМЯ______   Задача_4 (выход-3)",0	
A dd 12345,23,44444444,765432,4000000004,98765444,4,12344567,189087
;    результаты работы функции над элементами этого масссива:
;    --------------------------------------------------------------
;    12335,23,33333333,765332,3000000003,98765333,3,12333567,189087
;    --------------------------------------------------------------
;    (при сдаче программы продемонстрировать печать вышеуказанных чисел)
Len_A = ($-A)/4 ; это автоматическое вычисление количества элементов массива А
 
.code
; function Replace_4_to_3(X: longword): longword
; ВНИМАНИЕ: передача параметра X - по ЗНАЧЕНИЮ ! 
; стандартные соглашения о связях
Replace_4_to_3 proc
; стандартные соглашения о связях stdcall
; [EBP+8] ~ X
; ДЕЙСТВИЕ: EAX := новое число (с заменой всех цифр 4 на цифры 3 в числе X)
; ----------------------------------------------------------------------------

; здесь ВАШЕ описание тела этой (рекурсивной!) функции
    
    push EBP
    mov EBP, ESP
    
    push ECX    
    push EBX
    push EDX
    
    mov EAX, [EBP+8]
    cmp EAX, 10
    jB four
    
    mov EDX, 0
    mov EBX, 10
    div EBX
    push EAX 
  
    call Replace_4_to_3
    jmp @F
four: cmp EAX, 4
    jNE stop
    dec EAX
    jmp stop
@@: 
    mov ECX, EDX
    mul EBX
    cmp ECX, 4
    jNE @F
    mov ECX, 3
@@: add EAX, ECX
stop:
   
    pop EDX
    pop EBX
    pop ECX
    pop EBP
    ret 4*1
; ----------------------------------------------------------------------------
Replace_4_to_3 endp

Start:  
    ConsoleTitle offset T	
; ----------------------------------------------------------------------------
; здесь последовательное (в цикле) применение ВАШЕЙ процедуры к числам из массива A:
    mov ECX, 0
L:
    push A[ECX*4]
    call Replace_4_to_3
    outword EAX,,' '
    inc ECX
    cmp ECX, Len_A
    jNE L
    

; ----------------------------------------------------------------------------
    ;pause     ; нужно ТОЛЬКО при сдаче по e-mail
    exit
end Start